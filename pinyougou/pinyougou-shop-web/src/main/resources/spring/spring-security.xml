<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security.xsd
http://code.alibabatech.com/schema/dubbo
http://code.alibabatech.com/schema/dubbo/dubbo.xsd">
    <!-- 引用 dubbo 服务 -->
    <dubbo:application name="pinyougou-manage-web"/>
    <dubbo:registry address="zookeeper://192.168.12.168:2181"/>
    <dubbo:reference interface="com.pinyougou.sellergoods.service.SellerService" id="sellerService"/>

    <!--配置不需要进行登录就可以访问的资源-->
    <http pattern="/shoplogin.html" security="none"/>
    <http pattern="/css/**" security="none"/>
    <http pattern="/img/**" security="none"/>
    <http pattern="/js/**" security="none"/>
    <http pattern="/plugins/**" security="none"/>
    <http pattern="/seller/add.do" security="none"/>
    <http pattern="/register.html" security="none"/>

    <!--符合什么权限才可以访问资源
    use-expressions 为false表示在使用角色的时候不使用表达式；如果使用了则需要在角色上添加hasRole()
    -->
    <http use-expressions="false">
        <!--所有资源都需要有如下的角色才可以访问-->
        <intercept-url pattern="/**" access="ROLE_SELLER"/>

        <!--  配置登录的信息，login-page登录页面，default-target-url登录成功后跳转地址;
        authentication-failure-url 登录失败跳转地址
        -->
        <form-login login-page="/shoplogin.html" default-target-url="/admin/index.html"
                    always-use-default-target="true" authentication-failure-url="/shoplogin.html"/>

        <!--禁用csrf-->
        <csrf disabled="true"/>

        <!-- 在frame框架内跳转 -->
        <headers>
            <frame-options policy="SAMEORIGIN"/>
        </headers>

        <!-- 退出 -->
        <logout/>
    </http>

    <!-- 配置加密对象 -->
    <beans:bean id="bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></beans:bean>
    <!-- 自定义认证 -->
    <beans:bean id="userDetailsServiceImpl" class="com.pinyougou.shop.service.impl.UserDetailsServiceImpl">
        <!-- 注入sellerService -->
        <beans:property name="sellerService" ref="sellerService" />
        
    </beans:bean>

    <!--配置认证授权-->
    <authentication-manager>
        <authentication-provider user-service-ref="userDetailsServiceImpl">
            <password-encoder ref="bCryptPasswordEncoder"/>
        </authentication-provider>

    </authentication-manager>

</beans:beans>